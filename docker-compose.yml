services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: cgnat-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=cgnat-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - path.repo=/usr/share/elasticsearch/backup
      - bootstrap.memory_lock=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_backup:/usr/share/elasticsearch/backup
    ports:
      - "9200:9200"
    networks:
      - cgnat-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: cgnat-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
    ports:
      - "5601:5601"
    networks:
      - cgnat-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: cgnat-logstash
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/patterns:/usr/share/logstash/patterns
    ports:
      - "5514:5514/tcp"
      - "5514:5514/udp"
      - "6514:6514/tcp"
      - "9600:9600"
    networks:
      - cgnat-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  portal:
    image: node:18-alpine
    container_name: cgnat-portal
    working_dir: /app
    environment:
      - NODE_ENV=development
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - PORT=3000
    volumes:
      - ./portal:/app
    ports:
      - "7880:3000"
    networks:
      - cgnat-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    command: |
      sh -c "
        if [ ! -f package.json ]; then
          npm init -y
          npm install next@latest react@latest react-dom@latest
          mkdir -p pages
          cat > pages/index.js << 'EOFJS'
      export default function Home() {
        return (
          <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
            <h1>Portal de Logs NAT/CGNAT</h1>
            <p>Sistema funcionando! Elasticsearch conectado.</p>
            <div style={{ marginTop: '30px' }}>
              <h2>Status do Sistema</h2>
              <ul>
                <li>✅ Elasticsearch: Conectado</li>
                <li>✅ Logstash: Recebendo logs na porta 5514</li>
                <li>✅ Kibana: Disponível na porta 5601</li>
              </ul>
            </div>
            <div style={{ marginTop: '30px' }}>
              <h2>Configuração de Equipamentos</h2>
              <p>Configure seus equipamentos para enviar logs via syslog:</p>
              <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>
      Servidor: SEU_IP_AQUI
      Porta TCP: 5514
      Porta UDP: 5514
      Formato: key=value (orig=IP:porta trans=IP:porta dst=IP:porta proto=17)
              </pre>
            </div>
            <div style={{ marginTop: '30px' }}>
              <h2>Links Úteis</h2>
              <ul>
                <li><a href=\"http://localhost:5601\" target=\"_blank\">Kibana - Visualização de Logs</a></li>
                <li><a href=\"http://localhost:9001\" target=\"_blank\">MinIO Console - Backup</a></li>
              </ul>
            </div>
          </div>
        );
      }
      EOFJS
          cat > package.json << 'EOFPKG'
      {
        \"name\": \"cgnat-portal\",
        \"version\": \"1.0.0\",
        \"private\": true,
        \"scripts\": {
          \"dev\": \"next dev\",
          \"build\": \"next build\",
          \"start\": \"next start\"
        },
        \"dependencies\": {
          \"next\": \"14.0.0\",
          \"react\": \"^18\",
          \"react-dom\": \"^18\"
        }
      }
      EOFPKG
        fi
        npm install
        npm run dev
      "

  minio:
    image: minio/minio:latest
    container_name: cgnat-minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-changeme123}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - cgnat-network
    command: server /data --console-address ":9001"

volumes:
  elasticsearch_data:
    driver: local
  elasticsearch_backup:
    driver: local
  minio_data:
    driver: local

networks:
  cgnat-network:
    driver: bridge